
R : Copyright 2005, The R Foundation for Statistical Computing
Version 2.2.1 beta (2005-12-18 r36792)
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################
> ### chunk number 1: setup
> ###################################################
> rm(list = ls())
> if (!file.exists("tables")) dir.create("tables")
> set.seed(290875)
> options(prompt = "R> ", width = 63, # digits = 4,
+     SweaveHooks = list(leftpar = function()
+         par(mai = par("mai") * c(1, 1.05, 1, 1))))
R> HSAURpkg <- require("HSAUR")
Loading required package: HSAUR
Loading required package: lattice
Loading required package: MASS
Loading required package: scatterplot3d
R> if (!HSAURpkg) stop("cannot load package ", sQuote("HSAUR"))
R> rm(HSAURpkg)
R> 
R> 
R> ###################################################
R> ### chunk number 2: RP-setup
R> ###################################################
R> library("vcd")
Loading required package: grid
Loading required package: colorspace

Attaching package: 'colorspace'


	The following object(s) are masked from package:grDevices :

	 hcl 

R> library("lattice")
R> library("randomForest")
randomForest 4.5-15 
Type rfNews() to see new features/changes/bug fixes.
R> library("party")
Loading required package: survival
Loading required package: splines
Loading required package: modeltools
Loading required package: coin
Loading required package: mvtnorm
R> ltheme <- canonical.theme(color = FALSE) ## in-built B&W theme
R> ltheme$strip.background$col <- "transparent" ## change strip bg
R> lattice.options(default.theme = ltheme)
R> mai <- par("mai")
R> options(SweaveHooks = list(nullmai = function() { par(mai = rep(0, 4)) },
+                            twomai = function() { par(mai = c(0, mai[2], 0, 0)) },
+                            threemai = function() { par(mai = c(0, mai[2], 0.1, 0)) }))
R> 
R> 
R> ###################################################
R> ### chunk number 3: RP-Forbes-na
R> ###################################################
R> data("Forbes2000", package = "HSAUR")
R> Forbes2000 <- subset(Forbes2000, !is.na(profits))
R> 
R> 
R> ###################################################
R> ### chunk number 4: RP-Forbes-rpart
R> ###################################################
R> library("rpart")
R> forbes_rpart <- rpart(profits ~ assets + marketvalue + sales, data = Forbes2000)
R> 
R> 
R> ###################################################
R> ### chunk number 5: RP-Forbes-initial
R> ###################################################
R> plot(forbes_rpart, uniform = TRUE, margin = 0.1, branch = 0.5, compress = TRUE)
R> text(forbes_rpart)
R> 
R> 
R> ###################################################
R> ### chunk number 6: RP-Forbes-cp
R> ###################################################
R> print(forbes_rpart$cptable)
          CP nsplit rel error    xerror      xstd
1 0.23748446      0 1.0000000 1.0010339 0.1946331
2 0.04600397      1 0.7625155 0.8397144 0.2174245
3 0.04258786      2 0.7165116 0.8066685 0.2166339
4 0.02030891      3 0.6739237 0.7625940 0.2089684
5 0.01854336      4 0.6536148 0.7842574 0.2093683
6 0.01102304      5 0.6350714 0.7925891 0.2106088
7 0.01076006      6 0.6240484 0.7931405 0.2128048
8 0.01000000      7 0.6132883 0.7902771 0.2128037
R> opt <- which.min(forbes_rpart$cptable[,"xerror"])
R> 
R> 
R> ###################################################
R> ### chunk number 7: RP-Forbes-prune
R> ###################################################
R> cp <- forbes_rpart$cptable[opt, "CP"]
R> forbes_prune <- prune(forbes_rpart, cp = cp)
R> 
R> 
R> ###################################################
R> ### chunk number 8: RP-Forbes-plot
R> ###################################################
R> layout(matrix(1:2, nc = 1))
R> plot(forbes_prune, uniform = TRUE, margin = 0.1, branch = 0.5, compress = TRUE)
R> text(forbes_prune)
R> rn <- rownames(forbes_prune$frame)
R> lev <- rn[sort(unique(forbes_prune$where))]
R> where <- factor(rn[forbes_prune$where], levels = lev)
R> n <- tapply(Forbes2000$profits, where, length)
R> boxplot(Forbes2000$profits ~ where, varwidth = TRUE,
+         ylim = range(Forbes2000$profit) * 1.3, pars = list(axes =
+         FALSE), ylab = "Profits in US dollars")
R> abline(h = 0, lty = 3)
R> axis(2)
R> text(1:length(n), max(Forbes2000$profit) * 1.2, paste("n = ", n))
R> 
R> 
R> ###################################################
R> ### chunk number 9: RP-seed-again
R> ###################################################
R> set.seed(290875)
R> 
R> 
R> ###################################################
R> ### chunk number 10: RP-glaucoma-rpart
R> ###################################################
R> data("GlaucomaM", package = "ipred")
R> glaucoma_rpart <- rpart(Class ~ ., data = GlaucomaM,
+               control = rpart.control(xval = 100))
R> glaucoma_rpart$cptable
          CP nsplit rel error    xerror       xstd
1 0.65306122      0 1.0000000 1.5306122 0.06054391
2 0.07142857      1 0.3469388 0.3877551 0.05647630
3 0.01360544      2 0.2755102 0.3775510 0.05590431
4 0.01000000      5 0.2346939 0.4489796 0.05960655
R> opt <- which.min(glaucoma_rpart$cptable[,"xerror"])
R> cp <- glaucoma_rpart$cptable[opt, "CP"]
R> glaucoma_prune <- prune(glaucoma_rpart, cp = cp)
R> 
R> 
R> ###################################################
R> ### chunk number 11: RP-glaucoma-plot
R> ###################################################
R> layout(matrix(1:2, nc = 1))
R> plot(glaucoma_prune, uniform = TRUE, margin = 0.1, branch = 0.5, compress = TRUE)
R> text(glaucoma_prune, use.n = TRUE)
R> rn <- rownames(glaucoma_prune$frame)
R> lev <- rn[sort(unique(glaucoma_prune$where))]
R> where <- factor(rn[glaucoma_prune$where], levels = lev)
R> mosaicplot(table(where, GlaucomaM$Class), main = "", xlab = "", las = 1)
R> 
R> 
R> ###################################################
R> ### chunk number 12: RP-glaucoma-cp
R> ###################################################
R> nsplitopt <- vector(mode = "integer", length = 25)
R> for (i in 1:length(nsplitopt)) {
+     cp <- rpart(Class ~ ., data = GlaucomaM)$cptable
+     nsplitopt[i] <- cp[which.min(cp[,"xerror"]), "nsplit"]
+ }
R> table(nsplitopt)
nsplitopt
 1  2  5 
14  7  4 
R> 
R> 
R> ###################################################
R> ### chunk number 13: RP-glaucoma-bagg
R> ###################################################
R> trees <- vector(mode = "list", length = 25)
R> n <- nrow(GlaucomaM)
R> bootsamples <- rmultinom(length(trees), n, rep(1, n)/n)
R> mod <- rpart(Class ~ ., data = GlaucomaM, control = rpart.control(xval = 0))
R> for (i in 1:length(trees))
+     trees[[i]] <- update(mod, weights = bootsamples[,i])
R> 
R> 
R> ###################################################
R> ### chunk number 14: RP-glaucoma-splits
R> ###################################################
R> table(sapply(trees, function(x) as.character(x$frame$var[1])))

phcg varg vari vars 
   1   14    9    1 
R> 
R> 
R> ###################################################
R> ### chunk number 15: RP-glaucoma-baggpred
R> ###################################################
R> classprob <- matrix(0, nrow = n, ncol = length(trees))
R> for (i in 1:length(trees)) {
+     classprob[,i] <- predict(trees[[i]], newdata = GlaucomaM)[,2]
+     classprob[bootsamples[,i] > 0,i] <- NA
+ }
R> 
R> 
R> ###################################################
R> ### chunk number 16: RP-glaucoma-avg
R> ###################################################
R> avg <- rowMeans(classprob, na.rm = TRUE)
R> predictions <- factor(avg > 0.5, labels = levels(GlaucomaM$Class))
R> predtab <- table(predictions, GlaucomaM$Class)
R> predtab
           
predictions glaucoma normal
   glaucoma       76     14
   normal         22     84
R> 
R> 
R> ###################################################
R> ### chunk number 17: RP-glaucoma-sens
R> ###################################################
R> round(predtab[1,1] / colSums(predtab)[1] * 100)
glaucoma 
      78 
R> 
R> 
R> ###################################################
R> ### chunk number 18: RP-glaucoma-spez
R> ###################################################
R> round(predtab[2,2] / colSums(predtab)[2] * 100)
normal 
    86 
R> 
R> 
R> ###################################################
R> ### chunk number 19: RP-glaucoma-baggplot
R> ###################################################
R> library("lattice")
R> gdata <- data.frame(avg = rep(avg, 2),
+                     class = rep(as.numeric(GlaucomaM$Class), 2),
+                     obs = c(GlaucomaM[["varg"]], GlaucomaM[["vari"]]),
+                     var = factor(c(rep("varg", nrow(GlaucomaM)), rep("vari", nrow(GlaucomaM)))))
R> panelf <- function(x, y) {
+            panel.xyplot(x, y, pch = gdata$class)
+            panel.abline(h = 0.5, lty = 2)
+        }
R> print(xyplot(avg ~ obs | var, data = gdata,
+        panel = panelf,
+        scales = "free", xlab = "",
+        ylab = "Estimated Class Probability Glaucoma"))
R> 
R> 
R> ###################################################
R> ### chunk number 20: RP-glaucoma-rf
R> ###################################################
R> library("randomForest")
R> rf <- randomForest(Class ~ ., data = GlaucomaM)
R> 
R> 
R> ###################################################
R> ### chunk number 21: RP-glaucoma-rf-oob
R> ###################################################
R> table(predict(rf), GlaucomaM$Class)
          
           glaucoma normal
  glaucoma       82     12
  normal         16     86
R> 
R> 
R> ###################################################
R> ### chunk number 22: RP-glaucoma-ctree
R> ###################################################
R> library("party")
R> glaucoma_ctree <- ctree(Class ~ ., data = GlaucomaM)
R> 
R> 
R> ###################################################
R> ### chunk number 23: RP-glaucoma-ctree-plot
R> ###################################################
R> plot(glaucoma_ctree)
R> 
R> 
R> 
